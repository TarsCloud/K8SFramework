apiVersion: v1
kind: ServiceAccount
metadata:
  name: tars-tarsadminregistry
  namespace: {{.Release.Namespace}}
---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tars-tarsadminregistry
  namespace: {{.Release.Namespace}}
rules:
  - apiGroups: [ "" ]
    resources: [ pods ]
    verbs: [ get ,list, watch ]
  - apiGroups: [ k8s.tars.io ]
    resources: [ tconfigs ]
    verbs: [ get ,list, watch ]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tars-tarsadminregistry
  namespace: {{.Release.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tars-tarsadminregistry
subjects:
  - kind: ServiceAccount
    name: tars-tarsadminregistry
    namespace: {{.Release.Namespace}}
---

apiVersion: k8s.tars.io/{{ .Chart.AppVersion }}
kind: TImage
metadata:
  name: tars-tarsadminregistry
  namespace: {{.Release.Namespace}}
  labels:
    tars.io/ServerApp: tars
    tars.io/ServerName: tarsAdminRegistry
imageType: server
releases:
  - id: {{.Values.framework.tag | quote }}
    image: "{{.Values.framework.registry }}/tars.tarsadminregistry:{{.Values.framework.tag}}"
    {{- if.Values.framework.secret}}
    secret: {{.Values.framework.secret |quote }}
    {{- end}}
{{- include "TImageMerger" (dict "version" .Chart.AppVersion "namespace" .Release.Namespace  "name" "tars-tarsadminregistry" ) | nindent 2 -}}
{{"\n"}}
---

apiVersion: k8s.tars.io/{{ .Chart.AppVersion }}
kind: TServer
metadata:
  name: tars-tarsadminregistry
  namespace: {{.Release.Namespace}}
  annotations:
    tars.io/MinReplicas: "1"
  labels:
    tars.io/ServerApp: tars
    tars.io/ServerName: tarsAdminRegistry
    tars.io/SubType: tars
    tars.io/Template: tars.default
spec:
  app: tars
  server: tarsadminregistry
  subType: tars
  tars:
    template: tars.cpp
    servants:
      - name: AdminRegObj
        port: 12111
  k8s:
    replicas: 1
    serviceAccount: tars-tarsadminregistry
    env:
      - name: Namespace
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: PodName
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
    mounts:
      - name: host-log-dir
        source:
          hostPath:
            path: /usr/local/app/tars/app_log
            type: DirectoryOrCreate
        mountPath: /usr/local/app/tars/app_log
        subPathExpr: $(Namespace)/$(PodName)
  release:
    id: {{.Values.framework.tag }}
    image: "{{.Values.framework.registry }}/tars.tarsadminregistry:{{.Values.framework.tag}}"
    {{- if.Values.framework.secret}}
    secret: {{.Values.framework.secret |quote }}
    {{- end}}