/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "k8s.tars.io/api/crd/v1alpha1"
)

// TExitedRecordLister helps list TExitedRecords.
type TExitedRecordLister interface {
	// List lists all TExitedRecords in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TExitedRecord, err error)
	// TExitedRecords returns an object that can list and get TExitedRecords.
	TExitedRecords(namespace string) TExitedRecordNamespaceLister
	TExitedRecordListerExpansion
}

// tExitedRecordLister implements the TExitedRecordLister interface.
type tExitedRecordLister struct {
	indexer cache.Indexer
}

// NewTExitedRecordLister returns a new TExitedRecordLister.
func NewTExitedRecordLister(indexer cache.Indexer) TExitedRecordLister {
	return &tExitedRecordLister{indexer: indexer}
}

// List lists all TExitedRecords in the indexer.
func (s *tExitedRecordLister) List(selector labels.Selector) (ret []*v1alpha1.TExitedRecord, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TExitedRecord))
	})
	return ret, err
}

// TExitedRecords returns an object that can list and get TExitedRecords.
func (s *tExitedRecordLister) TExitedRecords(namespace string) TExitedRecordNamespaceLister {
	return tExitedRecordNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TExitedRecordNamespaceLister helps list and get TExitedRecords.
type TExitedRecordNamespaceLister interface {
	// List lists all TExitedRecords in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TExitedRecord, err error)
	// Get retrieves the TExitedRecord from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TExitedRecord, error)
	TExitedRecordNamespaceListerExpansion
}

// tExitedRecordNamespaceLister implements the TExitedRecordNamespaceLister
// interface.
type tExitedRecordNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TExitedRecords in the indexer for a given namespace.
func (s tExitedRecordNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TExitedRecord, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TExitedRecord))
	})
	return ret, err
}

// Get retrieves the TExitedRecord from the indexer for a given namespace and name.
func (s tExitedRecordNamespaceLister) Get(name string) (*v1alpha1.TExitedRecord, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("texitedrecord"), name)
	}
	return obj.(*v1alpha1.TExitedRecord), nil
}
