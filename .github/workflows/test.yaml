name: xxxx
on:
  push:
    branches: [ master ]
    paths-ignore:
      - "docs/**"
      - "charts/**"
      - ".github/workflows/build-compiler-*.yml"
      - ".github/workflows/build-deploy*.yml"
  pull_request:
    branches: [ master ]
    paths-ignore:
      - "docs/**"
      - "charts/**"
      - ".github/workflows/build-compiler-*.yml"
      - ".github/workflows/build-deploy*.yml"

jobs:
  prepare-controller:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      LocalRegistryName: local-registry
      LocalRegistryPort: 5000
      LocalRegistryShared: shared/registry

      DOCKER_RUN_WITHOUT_IT: 1
      REGISTRY_URL: localhost:5000/e2e
      BUILD_VERSION: 1.3.0-e2e
      CHART_VERSION: 1.3.0-e2e

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Create Shared
        run: mkdir -p shared/compiler && mkdir -p shared/registry

      - name: Build Compiler
        run: make compiler

      - name: Save Compiler
        run: docker images | grep "tarscompiler" | awk '{system("docker save "$1":"$2 " >shared/compiler/"$3".tgz")}'

      - name: Create Local Registry With Shared
        run: ./util/create-local-registry.sh ${{env.LocalRegistryName}} ${{env.LocalRegistryPort}} ${PWD}/${{env.LocalRegistryShared}}

      - name: Build Controller Images
        run: make controller

      - name: Display Images
        run: docker images | grep ${{env.BUILD_VERSION}}

      - name: Upload Shared
        uses: actions/upload-artifact@v3
        with:
          name: e2e-controller-shared
          path: shared

  e2e-controller:
    needs: [ prepare-controller ]
    strategy:
      fail-fast: false
      matrix:
        kindest: [ v1.18.20,v1.19.16,v1.20.15,v1.21.12,v1.22.7,v1.23.6,v1.24.3 ]
        storage: [ v1beta1,v1beta2,v1beta3 ]
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      LocalRegistryName: local-registry
      LocalRegistryPort: 5000
      LocalRegistryShared: shared/registry
      KindClusterName: e2e

      DOCKER_RUN_WITHOUT_IT: 1
      WITHOUT_DEPENDS_CHECK: 1

      REGISTRY_URL: localhost:5000/e2e
      BUILD_VERSION: 1.3.0-e2e
      CHART_VERSION: 1.3.0-e2e

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Download Shared
        uses: actions/download-artifact@v3
        with:
          name: e2e-controller-shared
          path: shared

      - name: Load Compiler
        run: ls shared/compiler | awk '{system("docker load <shared/compiler/"$1)}'

      - name: Create Local Registry With Shared
        run: ./util/create-local-registry.sh ${{env.LocalRegistryName}} ${{env.LocalRegistryPort}} ${PWD}/${{env.LocalRegistryShared}}

      - name: Build TarsController Chart
        run: make chart.controller CRD_STORAGE_VERSION=${{matrix.storage}}

      - name: Create Kind With Local Registry
        run: ./util/create-kind-with-local-registry.sh ${{env.KindClusterName}} ${{env.LocalRegistryName}} ${{env.LocalRegistryPort}} kindest/node:${{matrix.kindest}}

      - name: WaitFor Cluster Ready
        run: sleep 10 && kubectl wait --for=condition=Ready nodes --all --timeout=180s

      - name: Install Controller Chart
        run: make install.controller CHART=charts/tarscontroller-${{env.CHART_VERSION}}.tgz

      - name: WaitFor Controller Pods Ready
        run: sleep 10 && kubectl wait --for=condition=Ready pods --all -n tars-system

      - name: Run e2e.controller test
        run: make e2e.controller || true

      - name: GetLogs
        run: kubectl get pods -n tars-system |grep tars |awk '{system("kubectl logs -n tars-system " $1)}' |grep xxxx
